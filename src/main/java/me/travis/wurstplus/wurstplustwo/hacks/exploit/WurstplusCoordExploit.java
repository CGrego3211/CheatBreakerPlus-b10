/*
 * Decompiled with CFR 0.151.
 * 
 * Could not load the following classes:
 *  net.minecraft.entity.Entity
 *  net.minecraft.entity.player.EntityPlayer
 *  net.minecraft.util.math.Vec3d
 */
package me.travis.wurstplus.wurstplustwo.hacks.exploit;

import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.HashMap;
import me.travis.wurstplus.wurstplustwo.hacks.WurstplusCategory;
import me.travis.wurstplus.wurstplustwo.hacks.WurstplusHack;
import me.travis.wurstplus.wurstplustwo.util.WurstplusMessageUtil;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.math.Vec3d;

public class WurstplusCoordExploit
extends WurstplusHack {
    private HashMap<Entity, Vec3d> knownPlayers = new HashMap();
    private HashMap<String, Vec3d> tpdPlayers = new HashMap();
    private int numTicks = 0;
    private int numForgetTicks = 0;

    public WurstplusCoordExploit() {
        super(WurstplusCategory.WURSTPLUS_EXPLOIT);
        this.name = "Coord Exploit";
        this.tag = "CoordExploit";
        this.description = "find someone's coords";
    }

    @Override
    public void update() {
        if (this.numTicks >= 50) {
            this.numTicks = 0;
            for (Entity entity : WurstplusCoordExploit.mc.world.loadedEntityList) {
                if (!(entity instanceof EntityPlayer) || entity.getName().equals(WurstplusCoordExploit.mc.player.getName())) continue;
                Vec3d playerPos = new Vec3d(entity.posX, entity.posY, entity.posZ);
                if (this.knownPlayers.containsKey(entity) && Math.abs(this.knownPlayers.get(entity).distanceTo(playerPos)) > 50.0 && Math.abs(WurstplusCoordExploit.mc.player.getPositionVector().distanceTo(playerPos)) > 100.0 && (!this.tpdPlayers.containsKey(entity.getName()) || this.tpdPlayers.get(entity.getName()) != playerPos)) {
                    WurstplusMessageUtil.send_client_message("Player " + entity.getName() + " has tp'd to " + WurstplusCoordExploit.vectorToString(playerPos, false));
                    this.saveFile(WurstplusCoordExploit.vectorToString(playerPos, false), entity.getName());
                    this.knownPlayers.remove(entity);
                    this.tpdPlayers.put(entity.getName(), playerPos);
                }
                this.knownPlayers.put(entity, playerPos);
            }
        }
        if (this.numForgetTicks >= 9000000) {
            this.tpdPlayers.clear();
        }
        ++this.numTicks;
        ++this.numForgetTicks;
    }

    public static String vectorToString(Vec3d vector, boolean includeY) {
        StringBuilder builder = new StringBuilder();
        builder.append('(');
        builder.append((int)Math.floor(vector.x));
        builder.append(", ");
        if (includeY) {
            builder.append((int)Math.floor(vector.y));
            builder.append(", ");
        }
        builder.append((int)Math.floor(vector.z));
        builder.append(")");
        return builder.toString();
    }

    public void saveFile(String pos, String name) {
        try {
            File file = new File("./CBPLUS/coordexploit.txt");
            file.getParentFile().mkdirs();
            PrintWriter writer = new PrintWriter(new FileWriter(file, true));
            writer.println("name: " + name + " coords: " + pos);
            writer.close();
        }
        catch (Exception exception) {
            // empty catch block
        }
    }
}

